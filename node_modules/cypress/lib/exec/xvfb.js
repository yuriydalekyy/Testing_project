'use strict';

var os = require('os');
var Promise = require('bluebird');
var Xvfb = require('@cypress/xvfb');
var R = require('ramda');
var debug = require('debug')('cypress:cli');

var _require = require('../errors'),
    throwFormErrorText = _require.throwFormErrorText,
    errors = _require.errors;

var xvfb = Promise.promisifyAll(new Xvfb({ silent: true }));

module.exports = {
  _xvfb: xvfb, // expose for testing

  start: function start() {
    debug('Starting XVFB');
    return xvfb.startAsync().catch(throwFormErrorText(errors.missingXvfb));
  },
  stop: function stop() {
    debug('Stopping XVFB');
    return xvfb.stopAsync();
  },
  isNeeded: function isNeeded() {
    return os.platform() === 'linux' && !process.env.DISPLAY;
  },


  // async method, resolved with Boolean
  verify: function verify() {
    return xvfb.startAsync().then(R.T).catch(function (err) {
      debug('Could not verify xvfb: %s', err.message);
      return false;
    }).finally(xvfb.stopAsync);
  }
};