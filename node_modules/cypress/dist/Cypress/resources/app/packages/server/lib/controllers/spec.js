(function() {
  var appData, bundle, errors, fs;

  fs = require("fs");

  errors = require("../errors");

  bundle = require("../util/bundle");

  appData = require("../util/app_data");

  module.exports = {
    handle: function(spec, req, res, config, next, watchers, project) {
      var streamBundle;
      res.set({
        "Cache-Control": "no-cache, no-store, must-revalidate",
        "Pragma": "no-cache",
        "Expires": "0"
      });
      res.type("js");
      streamBundle = function() {
        var bundledPath;
        bundledPath = bundle.outputPath(config.projectRoot, spec);
        return fs.createReadStream(bundledPath).pipe(res);
      };
      if (config.isTextTerminal) {
        return bundle.build(spec, config).getLatestBundle().then(streamBundle)["catch"](function(err) {
          var filePath, os, ref;
          if (os = err.originalStack) {
            err.stack = os;
          }
          filePath = (ref = err.filePath) != null ? ref : spec;
          err = errors.get("BUNDLE_ERROR", filePath, bundle.errorMessage(err));
          errors.log(err);
          return project.emit("exitEarlyWithErr", err.message);
        });
      } else {
        return watchers.watchBundle(spec, config).then(streamBundle)["catch"](function(err) {
          return res.send(bundle.clientSideError(err));
        });
      }
    }
  };

}).call(this);
